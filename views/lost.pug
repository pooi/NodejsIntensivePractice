extends vue_layout
block content

    - function func(){ return "Register Lost Item"};

    div(style="margin-top: 50px;")
        v-app
            v-content
                v-container
                    h2= func()

                    if image == null
                        hr

                        form(action='/lost' method='post' enctype="multipart/form-data", id='image-form')
                            input(id='file', type='file', name='file', v-on:change='imageChange', accept="image/*" style='display: none;')
                            v-layout(xs12, align-center)
                                v-card(width='100%')
                                    v-card-title(style='background-color: #f5f5f5;')
                                        div
                                            h2.headline.my-0.py-0 Upload Image

                                    hr.my-0
                                    v-progress-linear.my-0(:indeterminate="true", height="2", color='info', v-if='isProgress')

                                    v-flex(xs12, text-xs-center)
                                        img.pa-2(:src='imgSrc', id='uploaded-img', width='50%', v-if='isFile')

                                    v-flex.py-5(xs12, text-xs-center, v-if='!isFile')
                                        v-btn(width='100%', color='info', v-on:click='browseClick', flat, large) Browse

                                    v-card-actions.right(v-if='isFile')
                                        v-btn(flat, small, color='red', v-on:click='removeFile') Remove
                                        v-btn(flat, small, color='orange', v-on:click='browseClick') Change
                                        v-btn(flat, small, color='info', v-on:click='uploadImage') Submit

                        p.pt-2.right * JPG, PNG, GIF 파일만 업로드 가능합니다.

                    else
                        hr
                        v-form.form-horizontal(ref="form" action='/lost/test2' method='POST')
                            .form-group
                                label.control-label.col-sm-2 Image:
                                .col-sm-10
                                    v-card(width='60%')
                                        img(src= image width="100%")
                            .form-group
                                label.control-label.col-sm-2 Name:
                                .col-sm-10
                                    v-text-field(label='Name', v-model='name', :rules="nameRules", :counter='10', name='name')

                            .form-group
                                label.control-label.col-sm-2 E-mail:
                                .col-sm-10
                                    v-text-field(label='E-mail', v-model='email', :rules="emailRules", name='email')

                            .form-group
                                label.control-label.col-sm-2 Labels:
                                .col-sm-10
                                    v-select(label='Input labels', chips='', tags='', solo='', append-icon='', clearable='', v-model='labels' )
                                        template(slot='selection', slot-scope='data')
                                            v-chip(close='', @input='removeLabel(data.item)', :selected='data.selected')
                                                strong {{ data.item }}

                            .form-group
                                label.control-label.col-sm-2 Texts:
                                .col-sm-10
                                    v-select(label='Input some text', chips='', tags='', solo='', append-icon='', clearable='', v-model='texts')
                                        template(slot='selection', slot-scope='data')
                                            v-chip( close='', @input='removeText(data.item)', :selected='data.selected')
                                                strong {{ data.item }}

                            .form-group
                                label.control-label.col-sm-2 Logos:
                                .col-sm-10
                                    v-select(label='Input brand name', chips='', tags='', solo='', append-icon='', clearable='', v-model='logos')
                                        template(slot='selection', slot-scope='data')
                                            v-chip( close='', @input='removeLogo(data.item)', :selected='data.selected')
                                                strong {{ data.item }}

                            .form-group
                                label.control-label.col-sm-2(for='date') 습득일:
                                .col-sm-10
                                    //v-date-picker.mt-3(full-width landscape v-model='picker', color="green lighten-1")
                                    v-dialog(ref='dialog', persistent, v-model='modal', lazy, full-width, width='330px', :return-value.sync='date')
                                        v-text-field(slot='activator', label='습득일', v-model='date', readonly)
                                        v-date-picker(v-model='date', scrollable color="green lighten-1", name='date')
                                            v-spacer
                                            v-btn(flat='', color='primary', @click='modal = false') Cancel
                                            v-btn(flat='', color='primary', @click='$refs.dialog.save(date)') OK


                            br
                            hr
                            p(class='right')
                                v-btn(color='error', type='button', onclick="window.location.href='/lost'") Back
                                v-btn(color='info', @click="submit") Submit

            include vue_footer

    script.

        const vue = new Vue({
            el: '#app',
            data: {
                title: 'Discovery and Lost',
                imgSrc: '',
                domEleArray: null,
                isFile: false,
                isProgress: false,
                valid: false,
                name: '',
                nameRules: [
                    function (v) {
                        return !!v || 'Name is required'
                    },
                    function (v) {
                        return v.length <= 10 || 'Name must be less than 10 characters'
                    },
                ],
                email: '',
                emailRules: [
                    function (v) {
                        return !!v || 'E-mail is required'
                    },
                    function (v) {
                        return /^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$/.test(v) || 'E-mail must be valid'
                    },
                ],
                labels: [],
                texts: [],
                logos: [],
                picker: null,
                date: null,
                menu: false,
                modal: false
            },
            methods: {
                browseClick: function(){
                    var inputFile = document.getElementById('file')
                    inputFile.click()
                },
                removeFile: function(){
                    this.domEleArray[1] = this.domEleArray[0].clone(true); // 쌔거(0번) -> 복사(1번)
                    $('#file').replaceWith(this.domEleArray[1]);
                    $("#file").change(function () {
                        vue.imageChange()
                    });
                    this.isFile = false
                },
                imageChange: function(){
                    var inputFile = document.getElementById('file')

                    var reader = new FileReader();
                    reader.onload = function () {
                        $('#uploaded-img').attr('src', reader.result);
                    }
                    reader.readAsDataURL(inputFile.files[0]);
                    this.isFile = true
                },
                uploadImage: function (e) {
                    this.isProgress = true
                    var form = document.getElementById('image-form')
                    form.submit()
                },
                removeLabel(item) {
                    this.labels.splice(this.labels.indexOf(item), 1)
                    this.labels = [this.labels]
                },
                removeText(item) {
                    this.texts.splice(this.texts.indexOf(item), 1)
                    this.texts = [this.texts]
                },
                removeLogo(item) {
                    this.logos.splice(this.logos.indexOf(item), 1)
                    this.logos = [this.logos]
                },
                submit() {
                    console.log('submit')
                    var data = {
                        name: this.name,
                        email: this.email,
                        labels: this.labels,
                        texts: this.texts,
                        logos: this.logos,
                        date: this.date
                    }

                    var form = document.createElement("form");
                    form.setAttribute("charset", "UTF-8");
                    form.setAttribute("method", "post"); // Get 또는 Post 입력
                    form.setAttribute("action", "/lost/test");
                    form.setAttribute("enctype", "application/json");

                    var hiddenField = document.createElement("input");
                    hiddenField.setAttribute("type", "hidden");
                    hiddenField.setAttribute("name", "name");
                    hiddenField.setAttribute("value", this.name);
                    form.appendChild(hiddenField);

                    hiddenField = document.createElement("input");
                    hiddenField.setAttribute("type", "hidden");
                    hiddenField.setAttribute("name", "email");
                    hiddenField.setAttribute("value", this.email);
                    form.appendChild(hiddenField);

                    hiddenField = document.createElement("input");
                    hiddenField.setAttribute("type", "hidden");
                    hiddenField.setAttribute("name", "date");
                    hiddenField.setAttribute("value", this.date);
                    form.appendChild(hiddenField);

                    for (i = 0; i < this.labels.length; i++) {
                        hiddenField = document.createElement("input");
                        hiddenField.setAttribute("type", "hidden");
                        hiddenField.setAttribute("name", "labels");
                        hiddenField.setAttribute("value", this.labels[i]);
                        form.appendChild(hiddenField);
                    }
                    for (i = 0; i < this.texts.length; i++) {
                        hiddenField = document.createElement("input");
                        hiddenField.setAttribute("type", "hidden");
                        hiddenField.setAttribute("name", "texts");
                        hiddenField.setAttribute("value", this.texts[i]);
                        form.appendChild(hiddenField);
                    }
                    for (i = 0; i < this.logos.length; i++) {
                        hiddenField = document.createElement("input");
                        hiddenField.setAttribute("type", "hidden");
                        hiddenField.setAttribute("name", "logos");
                        hiddenField.setAttribute("value", this.logos[i]);
                        form.appendChild(hiddenField);
                    }

                    document.body.appendChild(form);


                    form.submit();
                }
            },
            mounted: [
                function () {
                    var text = '#{labels}'
                    var list = text.split(',')
                    if(list.length > 0 && (list[0] === '' || list[0] === ' ')){
                        list.pop()
                    }
                    this.labels = list
                },
                function () {
                    var text = '#{texts}'
                    var list = text.split(',')
                    if (list.length > 0 && (list[0] === '' || list[0] === ' ')) {
                        list.pop()
                    }
                    this.texts = list
                },
                function () {
                    var text = '#{logos}'
                    var list = text.split(',')
                    if (list.length > 0 && (list[0] === '' || list[0] === ' ')) {
                        list.pop()
                    }
                    this.logos = list
                },
                function(){
                    this.domEleArray = [$('#file').clone()];
                }
            ]
        });

        // var $imageupload = $('.imageupload');
        // $imageupload.imageupload();
        // $('#imageupload-disable').on('click', function () {
        //     $imageupload.imageupload('disable');
        //     $(this).blur();
        // })
        // $('#imageupload-enable').on('click', function () {
        //     $imageupload.imageupload('enable');
        //     $(this).blur();
        // })
        // $('#imageupload-reset').on('click', function () {
        //     $imageupload.imageupload('reset');
        //     $(this).blur();
        // });




    //
    //script.
    //    function changeText(id) {
    //        var changedText;
    //        var text = document.getElementById(id).innerHTML;
    //        var popup = prompt("Please enter text:", text);
    //        if (popup == null || popup == "") {
    //            changedText = text;
    //        } else {
    //            changedText = popup;
    //        }
    //        document.getElementById(id).innerHTML = changedText;
    //    }
    //
    //    function changeInputText(el) {
    //        // alert(el.value);
    //        var changedText;
    //        var text = el.value;
    //        var popup = prompt("Please enter text:", text);
    //        if (popup == null || popup == "") {
    //            changedText = text;
    //        } else {
    //            changedText = popup;
    //        }
    //        el.value = changedText;
    //        var id = el.id;
    //        el_hidden = document.getElementsByClassName(id)[0];
    //        el_hidden.value = el.value;
    //    }
    //
    //    function addInputText(btn, type) {
    //
    //        var id = btn.id;
    //
    //        var changeText;
    //        var popup = prompt("Please enter text:", "");
    //        if (popup == null || popup == "") {
    //            return;
    //        } else {
    //            changedText = popup;
    //        }
    //
    //        var ul_texts = document.getElementById('ul-' + type);
    //
    //        // li.tag
    //        var li = document.createElement('li');
    //        li.className = 'tag';
    //
    //        // input.reset-this(type='button' id= "texts_" + count value=txt onclick="changeInputText(this)")
    //        var inputButton = document.createElement('input');
    //        inputButton.className = 'reset-this';
    //        inputButton.onclick = function () {
    //            changeInputText(this);
    //        };
    //        inputButton.type = 'button';
    //        inputButton.value = changedText;
    //        inputButton.id = type + '_' + id;
    //
    //        // input(type='hidden' class= "texts_" + count name= "texts" value=txt)
    //        var inputHidden = document.createElement('input');
    //        inputHidden.type = 'hidden';
    //        inputHidden.value = changedText;
    //        inputHidden.name = type;
    //        inputHidden.className = type + '_' + id;
    //
    //        btn.id = parseInt(id) + 1 + "";
    //
    //        li.appendChild(inputButton);
    //        li.appendChild(inputHidden);
    //
    //        ul_texts.appendChild(li);
    //
    //    }

