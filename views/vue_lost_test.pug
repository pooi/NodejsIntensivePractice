extends layout
block content

    script(src='/scripts/vue.js')
    //script(src='/scripts/vuetify.js')
    //link(href='/scripts/vuetify.css', rel='stylesheet')
    link(href='/stylesheets/vuetify-v1.0.0-beta.5.min.css', rel='stylesheet')
    script(src='/javascripts/vuetify-v1.0.0-beta.5.min.js')
    script(src='/scripts/axios.js')
    link(href='https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Material+Icons', rel='stylesheet')
    //meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui')



    - function func(){ return "Register Lost Item"};

    div(id="app" style="margin-top: 50px;")
        v-app
            v-content
                v-container
                    h2= func()

                    if image == null
                        hr
                        | Hello
                    else
                        hr
                        v-form.form-horizontal(ref="form")
                            .form-group
                                label.control-label.col-sm-2 Image:
                                .col-sm-10
                                    v-card(width='60%')
                                        img(src= image width="100%")
                            .form-group
                                label.control-label.col-sm-2 Name:
                                .col-sm-10
                                    v-text-field(label='Name', v-model='name', :rules="nameRules", :counter='10', name='name')

                            .form-group
                                label.control-label.col-sm-2 E-mail:
                                .col-sm-10
                                    v-text-field(label='E-mail', v-model='email', :rules="emailRules", name='email')

                            if labels.length > 0
                                .form-group
                                    label.control-label.col-sm-2 Labels:
                                    .col-sm-10
                                        v-select(label='Input labels', chips='', tags='', solo='', append-icon='', clearable='', v-model='labels' )
                                            template(slot='selection', slot-scope='data')
                                                v-chip(close='', @input='removeLabel(data.item)', :selected='data.selected')
                                                    strong {{ data.item }}

                            if texts.length > 0
                                .form-group
                                    label.control-label.col-sm-2 Texts:
                                    .col-sm-10
                                        v-select(label='Input some text', chips='', tags='', solo='', append-icon='', clearable='', v-model='texts')
                                            template(slot='selection', slot-scope='data')
                                                v-chip( close='', @input='removeText(data.item)', :selected='data.selected')
                                                    strong {{ data.item }}
                            if logos.length > 0
                                .form-group
                                    label.control-label.col-sm-2 Logos:
                                    .col-sm-10
                                        v-select(label='Input brand name', chips='', tags='', solo='', append-icon='', clearable='', v-model='logos')
                                            template(slot='selection', slot-scope='data')
                                                v-chip( close='', @input='removeLogo(data.item)', :selected='data.selected')
                                                    strong {{ data.item }}

                            .form-group
                                label.control-label.col-sm-2(for='date') 습득일:
                                .col-sm-10
                                    //v-date-picker.mt-3(full-width landscape v-model='picker', color="green lighten-1")
                                    v-dialog(ref='dialog', persistent, v-model='modal', lazy, full-width, width='330px', :return-value.sync='date')
                                        v-text-field(slot='activator', label='습득일', v-model='date', readonly)
                                        v-date-picker(v-model='date', scrollable color="green lighten-1", name='date')
                                            v-spacer
                                            v-btn(flat='', color='primary', @click='modal = false') Cancel
                                            v-btn(flat='', color='primary', @click='$refs.dialog.save(date)') OK


                            br
                            hr
                            p(class='right')
                                v-btn(color='error', type='button', onclick="window.location.href='/lost'") Back
                                v-btn(color='info', @click="submit") Submit

                            //.form-group
                            //    .col-sm-offset-2.col-sm-10
                            //        v-btn(color='error', type='button', onclick="window.location.href='/lost'") Back
                            //        v-btn(color='info', type='submit') Submit



    script.
        // import axios from 'axios'

        new Vue({
            el: '#app',
            data: {
                valid: false,
                name: '',
                nameRules: [
                    function (v) {
                        return !!v || 'Name is required'
                    },
                    function (v) {
                        return v.length <= 10 || 'Name must be less than 10 characters'
                    },
                ],
                email: '',
                emailRules: [
                    function (v) {
                        return !!v || 'E-mail is required'
                    },
                    function (v) {
                        return /^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$/.test(v) || 'E-mail must be valid'
                    },
                ],
                labels: [],
                texts: [],
                logos: [],
                picker: null,
                date: null,
                menu: false,
                modal: false
            },
            methods: {
                removeLabel(item) {
                    this.labels.splice(this.labels.indexOf(item), 1)
                    this.labels = [this.labels]
                },
                removeText(item) {
                    this.texts.splice(this.texts.indexOf(item), 1)
                    this.texts = [this.texts]
                },
                removeLogo(item) {
                    this.logos.splice(this.logos.indexOf(item), 1)
                    this.logos = [this.logos]
                },
                submit() {
                    console.log('submit')
                    // Native form submission is not yet supported
                    axios.post('/lost/test', {
                        name: this.name,
                        email: this.email,
                        labels: this.labels,
                        texts: this.texts,
                        logos: this.logos,
                        date: this.date
                    });
                }
            },
            mounted: [
                function () {
                    var text = '#{labels}'
                    var list = text.split(',')
                    this.labels = list
                },
                function () {
                    var text = '#{texts}'
                    var list = text.split(',')
                    this.texts = list
                },
                function () {
                    var text = '#{logos}'
                    var list = text.split(',')
                    this.logos = list
                }
            ]
        });


    .container(style="display: none")
        h2= func()



        if image == null
            hr
            form.form-horizontal(action='/lost' method='post' enctype="multipart/form-data")
                .imageupload.panel.panel-default
                    .panel-heading.clearfix
                        h3.panel-title.pull-left Upload Image
                        .btn-group.pull-right
                            button.btn.btn-default.active(type='button') File
                            //button.btn.btn-default(type='button') URL
                    .file-tab.panel-body
                        label.btn.btn-default.btn-file
                            span Browse
                            // The file is stored here.
                            input(type='file', name='image-file')
                        button.btn.btn-default(type='button') Remove
                    //.url-tab.panel-body
                    //    .input-group
                    //        input.form-control.hasclear(type='text', placeholder='Image URL')
                    //        .input-group-btn
                    //            button.btn.btn-default(type='button') Submit
                    //    button.btn.btn-default(type='button') Remove
                    //    // The URL is stored here.
                    //    input(type='hidden', name='image-url')

                div(align='center')
                    button.btn.btn-primary(type='submit') Submit
        else
            hr



            form.form-horizontal(id='form-detail' action='/lost/test' enctype='application/json' method='post')
                .form-group
                    label.control-label.col-sm-2 Image:
                    .col-sm-10
                        img(src= image width="50%")
                        br
                        br
                .form-group
                    label.control-label.col-sm-2(for='email') Email:
                    .col-sm-10
                        input#email.form-control(type='email', placeholder='Enter email', name='email')
                .form-group
                    label.control-label.col-sm-2(for='pwd') Password:
                    .col-sm-10
                        input#pwd.form-control(type='password', placeholder='Enter password', name='pwd')

                //input(type='hidden' name='label_count' value=labels.length)
                if labels.length > 0
                    .form-group
                        label.control-label.col-sm-2 Labels:
                        .col-sm-10
                            ul.tags(id='ul-labels')
                                - var count = 0;
                                each label in labels
                                    li.tag
                                        input.reset-this(type='button' id= "labels_" + count value=label onclick="changeInputText(this)")
                                        input(type='hidden' class= "labels_" + count name= "labels" value=label)
                                    -count+=1;
                            button.btn.btn-success.btn-slim(id= count onclick='addInputText(this, "labels")' type="button")= '추가'

                //input(type='hidden' name='text_count' value=texts.length)
                if texts.length > 0
                    .form-group
                        label.control-label.col-sm-2 Texts:
                        .col-sm-10
                            ul.tags(id='ul-texts')
                                - var count = 0;
                                each txt in texts
                                    li.tag
                                        input.reset-this(type='button' id= "texts_" + count value=txt onclick="changeInputText(this)")
                                        input(type='hidden' class= "texts_" + count name= "texts" value=txt)
                                    -count+=1;
                            button.btn.btn-success.btn-slim(id= count onclick='addInputText(this, "texts")' type="button")= '추가'

                //input(type='hidden' name='logo_count' value=logos.length)
                if logos.length > 0
                    .form-group
                        label.control-label.col-sm-2 Logos:
                        .col-sm-10
                            ul.tags(id='ul-logos')
                                - var count = 0;
                                each logo in logos
                                    li.tag
                                        input.reset-this(type='button' id= "logos_" + count value=logo onclick="changeInputText(this)")
                                        input(type='hidden' class= "logos_" + count name= "logos" value=logo)
                                    -count+=1;
                            button.btn.btn-success.btn-slim(id= count onclick='addInputText(this, "logos")' type="button")= '추가'

                //input(type='text' name='color_count' value=colors.length)
                if colors.length > 0
                    .form-group
                        label.control-label.col-sm-2 Colors:
                        .col-sm-10
                            ul.tags(style="overflow:visible;")
                                - var count = 0;
                                each color in colors
                                    li
                                        .card(id= "color_" + count)
                                            .card-top(style="background-color: rgb(" + color.red + "," + color.green + "," + color.blue + ");")
                                            .card-bottom
                                                = color.red + ", " + color.green + ", " + color.blue
                                    - count+=1;

                .form-group
                    label.control-label.col-sm-2(for='date') 습득일:
                    .col-sm-4
                        .input-group.date
                            input.form-control(id='datepicker' type='text' name='date')
                            .input-group-addon
                                span.glyphicon.glyphicon-th

                //link(href='/angularjs-datepicker/dist/angular-datepicker.min.css', rel='stylesheet', type='text/css')
                //script(src='/angularjs-datepicker/dist/angular-datepicker.min.js')
                //script.
                //    angular.module('app', [
                //        '720kb.datepicker'
                //    ]);
                //.form-group
                //    label.control-label.col-sm-2(for='date') 습득일2:
                //    .col-sm-4
                //        datepicker(date-format='yyyy-MM-dd', selector='form-control' datepicker-mobile="true")
                //            .input-group
                //                input.form-control(placeholder='Choose a date' name='date2')
                //                span.input-group-addon(style='cursor: pointer')
                //                    span.glyphicon.glyphicon-th


                        //datepicker.input-group.date(date-format="yyyy-MM-dd" datepicker-mobile="true")
                        //    input.form-control(ng-model='date', type='text' name='da')
                        //    .input-group-addon
                        //        span.glyphicon.glyphicon-th



                .form-group
                    .col-sm-offset-2.col-sm-10
                        button.btn.btn-danger(type='button', onclick="window.location.href='/lost'" style="margin-right: 5px;") Back
                        button.btn.btn-primary(type='submit') Submit



    script.
        var $imageupload = $('.imageupload');
        $imageupload.imageupload();
        $('#imageupload-disable').on('click', function () {
            $imageupload.imageupload('disable');
            $(this).blur();
        })
        $('#imageupload-enable').on('click', function () {
            $imageupload.imageupload('enable');
            $(this).blur();
        })
        $('#imageupload-reset').on('click', function () {
            $imageupload.imageupload('reset');
            $(this).blur();
        });

    script.
        function changeText(id) {
            var changedText;
            var text = document.getElementById(id).innerHTML;
            var popup = prompt("Please enter text:", text);
            if (popup == null || popup == "") {
                changedText = text;
            } else {
                changedText = popup;
            }
            document.getElementById(id).innerHTML = changedText;
        }

        function changeInputText(el) {
            // alert(el.value);
            var changedText;
            var text = el.value;
            var popup = prompt("Please enter text:", text);
            if (popup == null || popup == "") {
                changedText = text;
            } else {
                changedText = popup;
            }
            el.value = changedText;
            var id = el.id;
            el_hidden = document.getElementsByClassName(id)[0];
            el_hidden.value = el.value;
        }

        function addInputText(btn, type) {

            var id = btn.id;

            var changeText;
            var popup = prompt("Please enter text:", "");
            if (popup == null || popup == "") {
                return;
            } else {
                changedText = popup;
            }

            var ul_texts = document.getElementById('ul-' + type);

            // li.tag
            var li = document.createElement('li');
            li.className = 'tag';

            // input.reset-this(type='button' id= "texts_" + count value=txt onclick="changeInputText(this)")
            var inputButton = document.createElement('input');
            inputButton.className = 'reset-this';
            inputButton.onclick = function () {
                changeInputText(this);
            };
            inputButton.type = 'button';
            inputButton.value = changedText;
            inputButton.id = type + '_' + id;

            // input(type='hidden' class= "texts_" + count name= "texts" value=txt)
            var inputHidden = document.createElement('input');
            inputHidden.type = 'hidden';
            inputHidden.value = changedText;
            inputHidden.name = type;
            inputHidden.className = type + '_' + id;

            btn.id = parseInt(id) + 1 + "";

            li.appendChild(inputButton);
            li.appendChild(inputHidden);

            ul_texts.appendChild(li);

        }
