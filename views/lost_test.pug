extends vue_layout
block content

    - function func(){ return "Register Lost Item"};

    div(style="margin-top: 50px;")
        v-app
            v-content
                v-container
                    h2= func()

                    if image == null
                        hr

                        form(action='/lost' method='post' enctype="multipart/form-data", id='image-form')
                            input(id='file', type='file', name='file', v-on:change='imageChange', accept="image/*" style='display: none;')
                            v-layout(xs12, align-center)
                                v-card(width='100%')
                                    v-card-title(style='background-color: #f5f5f5;')
                                        div
                                            h2.headline.my-0.py-0 Upload Image

                                    hr.my-0
                                    v-progress-linear.my-0(:indeterminate="true", height="2", color='info', v-if='isProgress')

                                    v-flex(xs12, text-xs-center)
                                        img.pa-2(:src='imgSrc', id='uploaded-img', width='50%', v-if='isFile')

                                    v-flex.py-5(xs12, text-xs-center, v-if='!isFile')
                                        v-btn(width='100%', color='info', v-on:click='browseClick', flat, large) Browse

                                    v-card-actions.right(v-if='isFile')
                                        v-btn(flat, small, color='red', v-on:click='removeFile') Remove
                                        v-btn(flat, small, color='orange', v-on:click='browseClick') Change
                                        v-btn(flat, small, color='info', v-on:click='uploadImage') Submit

                        p.pt-2.right * JPG, PNG, GIF 파일만 업로드 가능합니다.

                    else
                        hr
                        v-form.form-horizontal(ref="form" action='/lost/test2' method='POST')
                            .form-group
                                label.control-label.col-sm-2 Image:
                                .col-sm-10
                                    v-card.elevation-10(width='60%')
                                        img(src= image width="100%")
                            .form-group
                                label.control-label.col-sm-2 Name:
                                .col-sm-10
                                    v-text-field(label='Name', v-model='name', :rules="nameRules", :counter='10', name='name')

                            .form-group
                                label.control-label.col-sm-2 E-mail:
                                .col-sm-10
                                    v-text-field(label='E-mail', v-model='email', :rules="emailRules", name='email')

                            .form-group
                                label.control-label.col-sm-2 Labels:
                                .col-sm-10
                                    v-select(label='Input labels', chips='', tags='', solo='', append-icon='', clearable='', v-model='labels' )
                                        template(slot='selection', slot-scope='data')
                                            v-chip(close='', @input='removeLabel(data.item)', :selected='data.selected')
                                                strong {{ data.item }}

                            .form-group
                                label.control-label.col-sm-2 Description:
                                .col-sm-10
                                    v-select(label='Input some text', chips='', tags='', solo='', append-icon='', clearable='', v-model='texts')
                                        template(slot='selection', slot-scope='data')
                                            v-chip( close='', @input='removeText(data.item)', :selected='data.selected')
                                                strong {{ data.item }}

                            .form-group
                                label.control-label.col-sm-2 Logos:
                                .col-sm-10
                                    v-select(label='Input brand name', chips='', tags='', solo='', append-icon='', clearable='', v-model='logos')
                                        template(slot='selection', slot-scope='data')
                                            v-chip( close='', @input='removeLogo(data.item)', :selected='data.selected')
                                                strong {{ data.item }}

                            .form-group
                                label.control-label.col-sm-2(for='date') 습득일:
                                .col-sm-10
                                    v-date-picker.hidden-sm-and-down(v-model='date', :landscape='true', color="green lighten-1", name='date')
                                    //v-date-picker.mt-3(full-width landscape v-model='picker', color="green lighten-1")
                                    v-dialog.hidden-md-and-up(ref='dialog', persistent, v-model='modal', lazy, full-width, width='330px', :return-value.sync='date')
                                        v-text-field(slot='activator', label='습득일', v-model='date', readonly)
                                        v-date-picker(v-model='date', scrollable, color="green lighten-1", name='date')
                                            v-spacer
                                            v-btn(flat='', color='primary', @click='modal = false') Cancel
                                            v-btn(flat='', color='primary', @click='$refs.dialog.save(date)') OK


                            br
                            hr
                            p(class='right')
                                v-btn(color='info', @click.native="responseDialog = true") Dialog(temp)
                                v-btn(color='error', type='button', onclick="window.location.href='/lost'") Back
                                v-btn(color='info', @click="submitWithAxios") Submit


            include vue_footer

    v-dialog.md6(v-model='responseDialog', persistent, scrollable, max-width='500px')
        //v-layout( wrap, align-center='')
        //v-flex(xs12='', md6='')
        v-card
            v-card-title.headline Successfully Registered
            hr.py-0.my-0
            v-card-media(src= image, height='250px')
            v-card-text(v-text='resSuccessMsg')
                //| Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.
            hr.py-0.my-0
            v-card-actions
                v-spacer
                v-btn(color='green darken-1', flat='flat', href='/lost') Ok
                //v-btn(color='success', flat, @click.native="responseDialog = false") Ok

    v-dialog(v-model='responseErrorDialog', max-width='350', persistent)
        v-card
            v-card-title.headline Registration Failure
            v-card-text
                | If you continue to fail, contact the administrator.
            v-card-actions
                v-spacer
                v-btn(color='green darken-1', flat='flat', @click.native="responseErrorDialog = false") Ok

    script.

        const vue = new Vue({
            el: '#app',
            data: {
                title: 'Discovery and Lost',
                loginDialog: false,
                imgSrc: '',
                domEleArray: null,
                isFile: false,
                isProgress: false,
                valid: false,
                name: 'user',
                nameRules: [
                    function (v) {
                        return !!v || 'Name is required'
                    },
                    function (v) {
                        return v.length <= 10 || 'Name must be less than 10 characters'
                    },
                ],
                email: 'user@discovery.cf',
                emailRules: [
                    function (v) {
                        return !!v || 'E-mail is required'
                    },
                    function (v) {
                        return /^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$/.test(v) || 'E-mail must be valid'
                    },
                ],
                labels: [],
                texts: [],
                logos: [],
                picker: null,
                date: null,
                menu: false,
                modal: false,
                responseDialog: false,
                resSuccessMsg: "This is temporary message.",
                responseErrorDialog: false
            },
            methods: {
                browseClick: function () {
                    var inputFile = document.getElementById('file')
                    inputFile.click()
                },
                removeFile: function () {
                    this.domEleArray[1] = this.domEleArray[0].clone(true); // 쌔거(0번) -> 복사(1번)
                    $('#file').replaceWith(this.domEleArray[1]);
                    $("#file").change(function () {
                        vue.imageChange()
                    });
                    this.isFile = false
                },
                imageChange: function () {
                    var inputFile = document.getElementById('file')

                    var reader = new FileReader();
                    reader.onload = function () {
                        $('#uploaded-img').attr('src', reader.result);
                    }
                    reader.readAsDataURL(inputFile.files[0]);
                    this.isFile = true
                },
                uploadImage: function (e) {
                    vue.isProgress = true
                    var form = document.getElementById('image-form')
                    form.submit()
                },
                removeLabel(item) {
                    this.labels.splice(this.labels.indexOf(item), 1)
                    this.labels = [this.labels]
                },
                removeText(item) {
                    this.texts.splice(this.texts.indexOf(item), 1)
                    this.texts = [this.texts]
                },
                removeLogo(item) {
                    this.logos.splice(this.logos.indexOf(item), 1)
                    this.logos = [this.logos]
                },
                dateToMs(date) {
                    var temp = date.split('-');
                    var year = parseInt(temp[0]);
                    var month = parseInt(temp[1]);
                    var day = parseInt(temp[2]);
                    var k = Date.parse(date);
                    return k;
                },
                msToDate(ms) {
                    var date = new Date(ms);
                    var dd = date.getDate();
                    var mm = date.getMonth() + 1; //January is 0!

                    var yyyy = date.getFullYear();
                    if (dd < 10) {
                        dd = '0' + dd;
                    }
                    if (mm < 10) {
                        mm = '0' + mm;
                    }
                    var dateString = yyyy + "-" + mm + "-" + dd;
                    return dateString
                },
                listToString(arr) {
                    var result = "";
                    for (var i = 0; i < arr.length; i++) {
                        result += arr[i];
                        if (i + 1 < arr.length) {
                            result += ";";
                        }
                    }
                    return result;
                },
                submit() {

                    var data = {
                        name: this.name,
                        email: this.email,
                        labels: this.labels,
                        texts: this.texts,
                        logos: this.logos,
                        date: this.date
                    }

                    var form = document.createElement("form");
                    form.setAttribute("charset", "UTF-8");
                    form.setAttribute("method", "post"); // Get 또는 Post 입력
                    form.setAttribute("action", "/lost/test");
                    form.setAttribute("enctype", "application/json");

                    hiddenField = document.createElement("input");
                    hiddenField.setAttribute("type", "hidden");
                    hiddenField.setAttribute("name", "photos");
                    hiddenField.setAttribute("value", "#{image}");
                    form.appendChild(hiddenField);

                    // var hiddenField = document.createElement("input");
                    // hiddenField.setAttribute("type", "hidden");
                    // hiddenField.setAttribute("name", "name");
                    // hiddenField.setAttribute("value", this.name);
                    // form.appendChild(hiddenField);

                    // hiddenField = document.createElement("input");
                    // hiddenField.setAttribute("type", "hidden");
                    // hiddenField.setAttribute("name", "email");
                    // hiddenField.setAttribute("value", this.email);
                    // form.appendChild(hiddenField);

                    hiddenField = document.createElement("input");
                    hiddenField.setAttribute("type", "hidden");
                    hiddenField.setAttribute("name", "discovery_date");
                    hiddenField.setAttribute("value", this.dateToMs(this.date));
                    form.appendChild(hiddenField);

                    hiddenField = document.createElement("input");
                    hiddenField.setAttribute("type", "hidden");
                    hiddenField.setAttribute("name", "tags");
                    hiddenField.setAttribute("value", this.listToString(this.labels));
                    form.appendChild(hiddenField);
                    // for (i = 0; i < this.labels.length; i++) {
                    //     hiddenField = document.createElement("input");
                    //     hiddenField.setAttribute("type", "hidden");
                    //     hiddenField.setAttribute("name", "labels");
                    //     hiddenField.setAttribute("value", this.labels[i]);
                    //     form.appendChild(hiddenField);
                    // }

                    hiddenField = document.createElement("input");
                    hiddenField.setAttribute("type", "hidden");
                    hiddenField.setAttribute("name", "description");
                    hiddenField.setAttribute("value", this.listToString(this.texts));
                    form.appendChild(hiddenField);
                    // for (i = 0; i < this.texts.length; i++) {
                    //     hiddenField = document.createElement("input");
                    //     hiddenField.setAttribute("type", "hidden");
                    //     hiddenField.setAttribute("name", "texts");
                    //     hiddenField.setAttribute("value", this.texts[i]);
                    //     form.appendChild(hiddenField);
                    // }

                    hiddenField = document.createElement("input");
                    hiddenField.setAttribute("type", "hidden");
                    hiddenField.setAttribute("name", "brand");
                    hiddenField.setAttribute("value", this.listToString(this.logos));
                    form.appendChild(hiddenField);
                    // for (i = 0; i < this.logos.length; i++) {
                    //     hiddenField = document.createElement("input");
                    //     hiddenField.setAttribute("type", "hidden");
                    //     hiddenField.setAttribute("name", "logos");
                    //     hiddenField.setAttribute("value", this.logos[i]);
                    //     form.appendChild(hiddenField);
                    // }

                    hiddenField = document.createElement("input");
                    hiddenField.setAttribute("type", "hidden");
                    hiddenField.setAttribute("name", "category");
                    hiddenField.setAttribute("value", "none");
                    form.appendChild(hiddenField);

                    document.body.appendChild(form);


                    form.submit();
                },
                submitWithAxios() {

                    var image = "#{image}";
                    image = image.startsWith('/') ? image : '/' +image;

                    var data = {
                        photos: image,
                        discovery_date: this.dateToMs(this.date),
                        tags: this.listToString(this.labels),
                        description: this.listToString(this.texts),
                        brand: this.listToString(this.logos),
                        category: 'none'
                    };

                    axios.post(
                        '/lost/test',
                        data
                    ).then(function (response) {
                        var data = response.data;
                        var insertId = data.insertId;
                        if(insertId != null){
                            vue.resSuccessMsg = "The item was successfully registered. The registration number is " + insertId + ".";
                            vue.responseDialog = true;
                        }else{
                            vue.responseErrorDialog = true;
                        }
                        console.log(response);
                    })
                    .catch(function (error) {
                        alert(error);
                    });
                }
            },
            mounted: [
                function () {
                    this.domEleArray = [$('#file').clone()];
                },
                function () {
                    var text = '#{labels}'
                    var list = text.split(',')
                    if (list.length > 0 && (list[0] === '' || list[0] === ' ')) {
                        list.pop()
                    }
                    this.labels = list
                },
                function () {
                    var text = '#{texts}'
                    var list = text.split(',')
                    if (list.length > 0 && (list[0] === '' || list[0] === ' ')) {
                        list.pop()
                    }
                    this.texts = list
                },
                function () {
                    var text = '#{logos}'
                    var list = text.split(',')
                    if (list.length > 0 && (list[0] === '' || list[0] === ' ')) {
                        list.pop()
                    }
                    this.logos = list
                }, function () {
                    var today = new Date();
                    var dd = today.getDate();
                    var mm = today.getMonth() + 1; //January is 0!

                    var yyyy = today.getFullYear();
                    if (dd < 10) {
                        dd = '0' + dd;
                    }
                    if (mm < 10) {
                        mm = '0' + mm;
                    }
                    var today = yyyy + "-" + mm + "-" + dd; //dd + '/' + mm + '/' + yyyy;
                    this.date = today;
                }
            ]
        });


